AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for Kafka EC2 instance

Parameters:
  KafkaInstanceType:
    Type: String
    Default: t2.medium
    Description: EC2 instance type for Kafka
  Environment:
    Type: String
    Default: dev
    Description: Environment name (dev, prod)
  KeyName:
    Description: Name of an existing EC2 KeyPair 
    Type: 'AWS::EC2::KeyPair::KeyName'
  PublicSubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Description: The ID of the public subnet where the instance will be launched
  VPCId:
    Type: 'AWS::EC2::VPC::Id'
    Description: The ID of the VPC where the instance will be launched
  AmazonLinux2AmiId:
    Type: String
    Description: The AMI ID for Amazon Linux 2
  KafkaSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup::Id'
    Description: The ID of Security Group For Kafka Instance.

Resources:

  KafkaInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmazonLinux2AmiId
      InstanceType: !Ref KafkaInstanceType
      SubnetId: !Ref PublicSubnetId
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref KafkaSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -ex
          exec > /var/log/user-data.log 2>&1  # Redirect output to a log file
          sleep 30s
          sudo yum update -y && sudo yum install java-1.8.0-openjdk-devel -y
          mkdir /home/ec2-user/Downloads
          curl "https://archive.apache.org/dist/kafka/2.7.0/kafka_2.12-2.7.0.tgz" -o /home/ec2-user/Downloads/kafka.tgz
          mkdir /home/ec2-user/kafka && tar -xvzf /home/ec2-user/Downloads/kafka.tgz -C /home/ec2-user/kafka --strip-components=1

          sudo chown -R ec2-user:ec2-user /home/ec2-user/kafka
          sudo chmod -R 755 /home/ec2-user/kafka

          echo "delete.topic.enable = true" | sudo tee -a /home/ec2-user/kafka/config/server.properties
          echo "auto.create.topics.enable = true" | sudo tee -a /home/ec2-user/kafka/config/server.properties
          cat <<EOF | sudo tee -a /etc/systemd/system/zookeeper.service
          [Unit]
          Requires=network.target remote-fs.target
          After=network.target remote-fs.target

          [Service]
          Type=simple
          User=ec2-user
          ExecStart=/home/ec2-user/kafka/bin/zookeeper-server-start.sh /home/ec2-user/kafka/config/zookeeper.properties
          ExecStop=/home/ec2-user/kafka/bin/zookeeper-server-stop.sh
          Restart=on-abnormal

          [Install]
          WantedBy=multi-user.target
          EOF

          echo "creating kafka.service"
          cat <<EOF | sudo tee -a /etc/systemd/system/kafka.service
          [Unit]
          Requires=zookeeper.service
          After=zookeeper.service

          [Service]
          Type=simple
          User=ec2-user
          ExecStart=/bin/sh -c '/home/ec2-user/kafka/bin/kafka-server-start.sh /home/ec2-user/kafka/config/server.properties > /home/ec2-user/kafka/kafka.log 2>&1'
          ExecStop=/home/ec2-user/kafka/bin/kafka-server-stop.sh
          Restart=on-abnormal

          [Install]
          WantedBy=multi-user.target
          EOF
          sudo systemctl daemon-reload
          sleep 1s
          sudo systemctl start zookeeper.service && sudo systemctl enable zookeeper.service
          sudo systemctl start kafka && sudo systemctl enable kafka

      Tags:
        - Key: Name
          Value: !Sub "${Environment}-kafka"
        - Key: Environment
          Value: !Ref Environment
        - Key: OS
          Value: Amazon Linux
        - Key: Managed
          Value: IAC

Outputs:
  KafkaInstancePublicIP:
    Description: Public IP of the Kafka EC2 instance
    Value: !GetAtt KafkaInstance.PublicIp